{"ast":null,"code":"import _classCallCheck from \"C:/Users/Owner/React-For-Beginners-Starter-Files-master/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/Owner/React-For-Beginners-Starter-Files-master/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"C:/Users/Owner/React-For-Beginners-Starter-Files-master/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/Owner/React-For-Beginners-Starter-Files-master/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\Owner\\\\React-For-Beginners-Starter-Files-master\\\\React-For-Beginners-Starter-Files-master\\\\catch-of-the-day\\\\src\\\\components\\\\StorePicker.js\";\nimport React from 'react'; //always need to do this\n\nimport { getFunName } from '../helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar StorePicker = /*#__PURE__*/function (_React$Component) {\n  _inherits(StorePicker, _React$Component);\n\n  var _super = _createSuper(StorePicker);\n\n  function StorePicker() {\n    _classCallCheck(this, StorePicker);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(StorePicker, [{\n    key: \"render\",\n    value: //make your sausage :)\n    function render() {\n      /* return React.createElement('p', {className: \"hey\"}, \"this is a sentence\");\r\n       above code is a way to create HTML elements in JS using React. Notice the use of\r\n       'className' to assign a class to the element.*/\n      return (\n        /*#__PURE__*/\n        //note, we cannot add sibling elements (separate from other elements) such as:\n        //<p>Hello</p>\n        //we can, however, do the following to overcome this limitation:\n        //we wrap in a React Fragment:\n        _jsxDEV(React.Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"store-selector\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Please enter a store\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              required: true,\n              placeholder: \"Enter a store name\",\n              value: \"hi\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Visit Store->\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 9\n        }, this)\n      );\n    }\n  }]);\n\n  return StorePicker;\n}(React.Component);\n/**Note the use of brackets in the snippet 'return (code...)' -- the html is run before the final data\r\n * is returned. Note, 'return()' would not work as return is not a function. We need the space after return:\r\n * 'return ()' * \r\n */\n\n\nexport default StorePicker; //export sausage!","map":{"version":3,"sources":["C:/Users/Owner/React-For-Beginners-Starter-Files-master/React-For-Beginners-Starter-Files-master/catch-of-the-day/src/components/StorePicker.js"],"names":["React","getFunName","StorePicker","Component"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAA0B;;AAC1B,SAAQC,UAAR,QAAyB,YAAzB;;;IAEMC,W;;;;;;;;;;;;;WAAqC;AAEvC,sBAAS;AAEN;AACP;AACA;AACQ;AAAA;AACA;AACA;AACA;AACA;AAEA,gBAAC,KAAD,CAAO,QAAP;AAAA,iCAKA;AAAM,YAAA,SAAS,EAAC,gBAAhB;AAAA,oCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAO,cAAA,IAAI,EAAC,MAAZ;AAAmB,cAAA,QAAQ,MAA3B;AAA4B,cAAA,WAAW,EAAC,oBAAxC;AAA6D,cAAA,KAAK,EAAC;AAAnE;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAQ,cAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA;AANA;AAkBH;;;;EAzBqBF,KAAK,CAACG,S;AA4BhC;AACA;AACA;AACA;;;AACA,eAAeD,WAAf,C,CAA2B","sourcesContent":["import React from 'react';//always need to do this\r\nimport {getFunName} from '../helpers';\r\n\r\nclass StorePicker extends React.Component {//make your sausage :)\r\n\r\n    render() {\r\n\r\n       /* return React.createElement('p', {className: \"hey\"}, \"this is a sentence\");\r\n        above code is a way to create HTML elements in JS using React. Notice the use of\r\n        'className' to assign a class to the element.*/\r\n        return (\r\n        //note, we cannot add sibling elements (separate from other elements) such as:\r\n        //<p>Hello</p>\r\n        //we can, however, do the following to overcome this limitation:\r\n        //we wrap in a React Fragment:\r\n\r\n        <React.Fragment>\r\n       \r\n        {/*the brackets allow us to 'hop-back' into JavaScript from JSX and it must remain\r\n        within the outer wrapper, not outside of it*/}\r\n\r\n        <form className=\"store-selector\"> \r\n            <h2>Please enter a store</h2>\r\n            <input type=\"text\" required placeholder='Enter a store name' value=\"hi\"/>\r\n            <button type=\"submit\">{`Visit Store->`}</button>\r\n        </form>\r\n        </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n/**Note the use of brackets in the snippet 'return (code...)' -- the html is run before the final data\r\n * is returned. Note, 'return()' would not work as return is not a function. We need the space after return:\r\n * 'return ()' * \r\n */\r\nexport default StorePicker;//export sausage!"]},"metadata":{},"sourceType":"module"}