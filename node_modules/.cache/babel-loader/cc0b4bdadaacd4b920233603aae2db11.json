{"ast":null,"code":"import _objectSpread from\"C:/Users/Owner/React-For-Beginners-Starter-Files-master/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"C:/Users/Owner/React-For-Beginners-Starter-Files-master/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/Users/Owner/React-For-Beginners-Starter-Files-master/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"C:/Users/Owner/React-For-Beginners-Starter-Files-master/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/Users/Owner/React-For-Beginners-Starter-Files-master/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import{formatPrice}from'../helpers';import{TransitionGroup,CSSTransition}from'react-transition-group';//import these for animations\nimport{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var Order=/*#__PURE__*/function(_React$Component){_inherits(Order,_React$Component);var _super=_createSuper(Order);function Order(){var _this;_classCallCheck(this,Order);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.renderOrder=function(key){var fish=_this.props.fishes[key];var count=_this.props.order[key];var isAvailable=fish&&fish.status===\"available\";//make sure 'fish' is loaded AND available!!\nvar transitionObptions={//this acts like component props for <CSSTransition> below\nclassNames:\"order\",key:key,timeout:{enter:500,exit:500}};if(!fish)return null;//we set this return of the 'if' statement to null so that while the page waits for firebase to return\n//the set of fishes, there is no order displayed, then the fishes come in from firebase and the local\n//storage can reload the order, based on the fishes that the page now has back. \nif(!isAvailable){return/*#__PURE__*/_jsx(CSSTransition,_objectSpread(_objectSpread({},transitionObptions),{},{children:/*#__PURE__*/_jsxs(\"li\",{children:[\"Sorry \",fish?fish.name:'fish',\" is no longer available\"]},key)}));};return/*#__PURE__*/ (//css animation settings:\n_jsx(CSSTransition,_objectSpread(_objectSpread({},transitionObptions),{},{children:/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsxs(\"span\",{children:[/*#__PURE__*/_jsx(TransitionGroup,{component:\"span\",className:\"count\",children:/*#__PURE__*/_jsx(CSSTransition,{classNames:\"count\",timeout:{enter:500,exit:500},children:/*#__PURE__*/_jsx(\"span\",{children:count})},count)}),\"lbs \",fish.name,formatPrice(count*fish.price),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return _this.props.removeFromOrder(key);},children:\"\\xD7\"})]})},key)})));};return _this;}_createClass(Order,[{key:\"render\",value://above, we separated out the rendering (renderOrder) into a function that can be called below -- cleaner code!\nfunction render(){var _this2=this;var orderIds=Object.keys(this.props.order);//gets the key for each fish order.\nvar total=orderIds.reduce(function(prevTotal,key){var fish=_this2.props.fishes[key];var count=_this2.props.order[key];var isAvailable=fish&&fish.status===\"available\";if(isAvailable){return prevTotal+count*fish.price;}return prevTotal;},0);return/*#__PURE__*/_jsxs(\"div\",{className:\"order-wrap\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Order\"}),/*#__PURE__*/_jsx(TransitionGroup,{component:\"ul\",className:\"order\",children:orderIds.map(this.renderOrder)}),/*#__PURE__*/_jsxs(\"div\",{className:\"total\",children:[\"Total:\",/*#__PURE__*/_jsx(\"strong\",{children:formatPrice(total)})]})]});}}]);return Order;}(React.Component);export default Order;","map":{"version":3,"sources":["C:/Users/Owner/React-For-Beginners-Starter-Files-master/React-For-Beginners-Starter-Files-master/catch-of-the-day/src/components/Order.js"],"names":["React","formatPrice","TransitionGroup","CSSTransition","Order","renderOrder","key","fish","props","fishes","count","order","isAvailable","status","transitionObptions","classNames","timeout","enter","exit","name","price","removeFromOrder","orderIds","Object","keys","total","reduce","prevTotal","map","Component"],"mappings":"unCAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAAQC,WAAR,KAA0B,YAA1B,CACA,OAASC,eAAT,CAA0BC,aAA1B,KAA8C,wBAA9C,CAAuE;2FAEjEC,CAAAA,K,mUASNC,W,CAAY,SAACC,GAAD,CAAO,CACf,GAAMC,CAAAA,IAAI,CAAG,MAAKC,KAAL,CAAWC,MAAX,CAAkBH,GAAlB,CAAb,CACA,GAAMI,CAAAA,KAAK,CAAG,MAAKF,KAAL,CAAWG,KAAX,CAAiBL,GAAjB,CAAd,CACA,GAAMM,CAAAA,WAAW,CAAGL,IAAI,EAAIA,IAAI,CAACM,MAAL,GAAe,WAA3C,CAAuD;AACvD,GAAMC,CAAAA,kBAAkB,CAAG,CAAC;AACxBC,UAAU,CAAC,OADY,CAEvBT,GAAG,CAACA,GAFmB,CAGvBU,OAAO,CAAC,CAACC,KAAK,CAAC,GAAP,CAAYC,IAAI,CAAC,GAAjB,CAHe,CAA3B,CAMA,GAAG,CAACX,IAAJ,CAAU,MAAO,KAAP,CACV;AACA;AACA;AACA,GAAG,CAACK,WAAJ,CAAgB,CAChB,mBACQ,KAAC,aAAD,gCAAmBE,kBAAnB,4BACA,+BACOP,IAAI,CAAGA,IAAI,CAACY,IAAR,CAAc,MADzB,6BAASb,GAAT,CADA,GADR,CAOC,EACD,oBACI;AACA,KAAC,aAAD,gCAAmBQ,kBAAnB,4BACA,iCACA,qCAEJ,KAAC,eAAD,EAAiB,SAAS,CAAC,MAA3B,CAAkC,SAAS,CAAC,OAA5C,uBACA,KAAC,aAAD,EACI,UAAU,CAAC,OADf,CAGI,OAAO,CAAE,CAACG,KAAK,CAAC,GAAP,CAAYC,IAAI,CAAC,GAAjB,CAHb,uBAIA,sBAAOR,KAAP,EAJA,EAESA,KAFT,CADA,EAFI,QAWKH,IAAI,CAACY,IAXV,CAYClB,WAAW,CAACS,KAAK,CAACH,IAAI,CAACa,KAAZ,CAZZ,cAaA,eAAQ,OAAO,CAAE,yBAAI,OAAKZ,KAAL,CAAWa,eAAX,CAA2Bf,GAA3B,CAAJ,EAAjB,kBAbA,GADA,EAASA,GAAT,CADA,GAFJ,EAsBH,C,uDACD;AAEI,iBAAS,iBAEL,GAAMgB,CAAAA,QAAQ,CAAGC,MAAM,CAACC,IAAP,CAAY,KAAKhB,KAAL,CAAWG,KAAvB,CAAjB,CAA+C;AAC/C,GAAMc,CAAAA,KAAK,CAAGH,QAAQ,CAACI,MAAT,CAAgB,SAACC,SAAD,CAAYrB,GAAZ,CAAkB,CAC5C,GAAMC,CAAAA,IAAI,CAAG,MAAI,CAACC,KAAL,CAAWC,MAAX,CAAkBH,GAAlB,CAAb,CACA,GAAMI,CAAAA,KAAK,CAAG,MAAI,CAACF,KAAL,CAAWG,KAAX,CAAiBL,GAAjB,CAAd,CACA,GAAMM,CAAAA,WAAW,CAAGL,IAAI,EAAIA,IAAI,CAACM,MAAL,GAAe,WAA3C,CAEA,GAAGD,WAAH,CAAe,CACX,MAAOe,CAAAA,SAAS,CAAEjB,KAAK,CAACH,IAAI,CAACa,KAA7B,CACH,CACG,MAAOO,CAAAA,SAAP,CAEP,CAVa,CAUX,CAVW,CAAd,CAYA,mBAEI,aAAK,SAAS,CAAE,YAAhB,wBACG,6BADH,cAEG,KAAC,eAAD,EAAiB,SAAS,CAAC,IAA3B,CAAiC,SAAS,CAAC,OAA3C,UACKL,QAAQ,CAACM,GAAT,CAAa,KAAKvB,WAAlB,CADL,EAFH,cAME,aAAK,SAAS,CAAC,OAAf,iCAEI,wBAASJ,WAAW,CAACwB,KAAD,CAApB,EAFJ,GANF,GAFJ,CAcH,C,mBAtFezB,KAAK,CAAC6B,S,EAwF1B,cAAezB,CAAAA,KAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport {formatPrice} from '../helpers';\r\nimport { TransitionGroup, CSSTransition} from 'react-transition-group';//import these for animations\r\n\r\nclass Order extends React.Component{\r\n\r\n    //for the Data validation below, we can go further and shape out the object Prop Types like in Fish.js etc\r\n    static propTypes={\r\n        fishes: PropTypes.object,\r\n        order: PropTypes.object,\r\n        removeFromOrder: PropTypes.func\r\n    };\r\n\r\nrenderOrder=(key)=>{\r\n    const fish = this.props.fishes[key];\r\n    const count = this.props.order[key];\r\n    const isAvailable = fish && fish.status ===\"available\";//make sure 'fish' is loaded AND available!!\r\n    const transitionObptions = {//this acts like component props for <CSSTransition> below\r\n        classNames:\"order\", \r\n        key:key, \r\n        timeout:{enter:500, exit:500}\r\n    };\r\n\r\n    if(!fish) return null;\r\n    //we set this return of the 'if' statement to null so that while the page waits for firebase to return\r\n    //the set of fishes, there is no order displayed, then the fishes come in from firebase and the local\r\n    //storage can reload the order, based on the fishes that the page now has back. \r\n    if(!isAvailable){\r\n    return  (\r\n            <CSSTransition {...transitionObptions}>{/**spread props in */}\r\n            <li key={key}>\r\n            Sorry {fish ? fish.name: 'fish'} is no longer available\r\n            </li>\r\n            </CSSTransition>\r\n    );\r\n    };\r\n    return (\r\n        //css animation settings:\r\n        <CSSTransition {...transitionObptions}>\r\n        <li key={key}>\r\n        <span>{/**span used here for CSS purposes */}\r\n\r\n    <TransitionGroup component=\"span\" className=\"count\">\r\n    <CSSTransition \r\n        classNames=\"count\" \r\n        key={count}\r\n        timeout={{enter:500, exit:500}}>\r\n    <span>{count}</span> \r\n    </CSSTransition>\r\n    </TransitionGroup>\r\n\r\n        lbs {fish.name}\r\n        {formatPrice(count*fish.price)}\r\n        <button onClick={()=>this.props.removeFromOrder(key)}>&times;</button>\r\n    </span>\r\n    </li>\r\n    </CSSTransition>\r\n    );\r\n};\r\n//above, we separated out the rendering (renderOrder) into a function that can be called below -- cleaner code!\r\n\r\n    render() {\r\n\r\n        const orderIds = Object.keys(this.props.order);//gets the key for each fish order.\r\n        const total = orderIds.reduce((prevTotal, key)=>{\r\n            const fish = this.props.fishes[key];\r\n            const count = this.props.order[key];\r\n            const isAvailable = fish && fish.status ===\"available\";\r\n\r\n            if(isAvailable){\r\n                return prevTotal+(count*fish.price);\r\n            }\r\n                return prevTotal;\r\n            \r\n        }, 0);\r\n       \r\n        return (\r\n\r\n            <div className =\"order-wrap\">\r\n               <h2>Order</h2> \r\n               <TransitionGroup component=\"ul\"  className='order'>\r\n                   {orderIds.map(this.renderOrder)} \r\n        {/**Using map to map over each order, using key as argument, then displaying key */}\r\n               </TransitionGroup>\r\n              <div className='total'>\r\n              Total:\r\n                  <strong>{formatPrice(total)}</strong>\r\n              </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Order;"]},"metadata":{},"sourceType":"module"}