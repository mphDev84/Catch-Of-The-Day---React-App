{"ast":null,"code":"import _objectSpread from\"C:/Users/Owner/React-For-Beginners-Starter-Files-master/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"C:/Users/Owner/React-For-Beginners-Starter-Files-master/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/Users/Owner/React-For-Beginners-Starter-Files-master/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"C:/Users/Owner/React-For-Beginners-Starter-Files-master/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/Users/Owner/React-For-Beginners-Starter-Files-master/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var EditFishForm=/*#__PURE__*/function(_React$Component){_inherits(EditFishForm,_React$Component);var _super=_createSuper(EditFishForm);function EditFishForm(){var _this;_classCallCheck(this,EditFishForm);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.handleChange=function(event){//user enters some data in the fields\nconsole.log(event.currentTarget.name);//update that fish\n//1. take a copy of the current fish\nvar updatedFish=_objectSpread(_objectSpread({},_this.props.fish),{},{//overwrite the value that is currently in state for whatever the user entered\n[event.currentTarget.name]:event.currentTarget.value//user-input value\n});_this.props.updateFish(_this.props.index,updatedFish);//update fish and send data upstream to App.js\n};return _this;}_createClass(EditFishForm,[{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/_jsxs(\"div\",{className:\"fish-edit\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"name\",onChange:this.handleChange,value:this.props.fish.name}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"price\",onChange:this.handleChange,value:this.props.fish.price}),/*#__PURE__*/_jsxs(\"select\",{type:\"text\",name:\"status\",onChange:this.handleChange,value:this.props.fish.status,children:[/*#__PURE__*/_jsx(\"option\",{value:\"available\",children:\"Fresh!\"}),/*#__PURE__*/_jsx(\"option\",{value:\"unavailable\",children:\"Sold Out!\"})]}),/*#__PURE__*/_jsx(\"textarea\",{type:\"text\",name:\"desc\",onChange:this.handleChange,value:this.props.fish.desc}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"image\",onChange:this.handleChange,value:this.props.fish.image}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return _this2.props.deleteFish(_this2.props.index);},children:\"Remove Fish\"})]});}}]);return EditFishForm;}(React.Component);export default EditFishForm;/**NOTE--- DOING this: <input type=\"text\" name=\"name\" value={this.props.fish.name} /> \r\n * \r\n * means that STATE now exists in TWO places - App.js, and above. This is because we passed state down to \r\n * EditFishForm and React throws an error when trying to update state in two places like that. State \r\n * should only be accessed/changed in the App component. To overcome this, we code an 'onChange' event. \r\n*/","map":{"version":3,"sources":["C:/Users/Owner/React-For-Beginners-Starter-Files-master/React-For-Beginners-Starter-Files-master/catch-of-the-day/src/components/EditFishForm.js"],"names":["React","EditFishForm","handleChange","event","console","log","currentTarget","name","updatedFish","props","fish","value","updateFish","index","price","status","desc","image","deleteFish","Component"],"mappings":"unCAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,C,2FAIMC,CAAAA,Y,+VAcNC,Y,CAAe,SAACC,KAAD,CAAU,CAAC;AAC1BC,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,aAAN,CAAoBC,IAAhC,EACA;AACA;AACA,GAAMC,CAAAA,WAAW,gCACV,MAAKC,KAAL,CAAWC,IADD,MAEb;AACA,CAACP,KAAK,CAACG,aAAN,CAAoBC,IAArB,EAA4BJ,KAAK,CAACG,aAAN,CAAoBK,KAAM;AAHzC,EAAjB,CAKA,MAAKF,KAAL,CAAWG,UAAX,CAAsB,MAAKH,KAAL,CAAWI,KAAjC,CAAwCL,WAAxC,EAAqD;AAEpD,C,8DACG,iBAAS,iBACL,mBACI,aAAK,SAAS,CAAC,WAAf,wBAGA,cAAO,IAAI,CAAC,MAAZ,CAAmB,IAAI,CAAC,MAAxB,CAA+B,QAAQ,CAAE,KAAKN,YAA9C,CAA4D,KAAK,CAAE,KAAKO,KAAL,CAAWC,IAAX,CAAgBH,IAAnF,EAHA,cAIA,cAAO,IAAI,CAAC,MAAZ,CAAmB,IAAI,CAAC,OAAxB,CAAgC,QAAQ,CAAE,KAAKL,YAA/C,CAA6D,KAAK,CAAE,KAAKO,KAAL,CAAWC,IAAX,CAAgBI,KAApF,EAJA,cAKA,gBAAQ,IAAI,CAAC,MAAb,CAAoB,IAAI,CAAC,QAAzB,CAAkC,QAAQ,CAAE,KAAKZ,YAAjD,CAA+D,KAAK,CAAE,KAAKO,KAAL,CAAWC,IAAX,CAAgBK,MAAtF,wBACI,eAAQ,KAAK,CAAC,WAAd,oBADJ,cAEI,eAAQ,KAAK,CAAC,aAAd,uBAFJ,GALA,cASA,iBAAU,IAAI,CAAC,MAAf,CAAsB,IAAI,CAAC,MAA3B,CAAkC,QAAQ,CAAE,KAAKb,YAAjD,CAA+D,KAAK,CAAE,KAAKO,KAAL,CAAWC,IAAX,CAAgBM,IAAtF,EATA,cAUA,cAAO,IAAI,CAAC,MAAZ,CAAmB,IAAI,CAAC,OAAxB,CAAgC,QAAQ,CAAE,KAAKd,YAA/C,CAA6D,KAAK,CAAE,KAAKO,KAAL,CAAWC,IAAX,CAAgBO,KAApF,EAVA,cAYA,eAAQ,OAAO,CAAE,yBAAI,CAAA,MAAI,CAACR,KAAL,CAAWS,UAAX,CAAsB,MAAI,CAACT,KAAL,CAAWI,KAAjC,CAAJ,EAAjB,yBAZA,GADJ,CAgBH,C,0BA3CsBb,KAAK,CAACmB,S,EAgDjC,cAAelB,CAAAA,YAAf,CACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { object } from 'prop-types';\r\n\r\nclass EditFishForm extends React.Component{\r\n\r\n    static propTypes ={\r\n        fish: PropTypes.shape({\r\n            image: PropTypes.string,\r\n            name: PropTypes.string,\r\n            desc: PropTypes.string,\r\n            status: PropTypes.string,\r\n            price: PropTypes.number\r\n        }),\r\n        index: PropTypes.string,\r\n        updateFish: PropTypes.func,\r\n    }\r\n\r\nhandleChange = (event) =>{//user enters some data in the fields\r\nconsole.log(event.currentTarget.name); \r\n//update that fish\r\n//1. take a copy of the current fish\r\nconst updatedFish = {\r\n    ...this.props.fish,\r\n    //overwrite the value that is currently in state for whatever the user entered\r\n    [event.currentTarget.name]: event.currentTarget.value //user-input value\r\n};\r\nthis.props.updateFish(this.props.index, updatedFish);//update fish and send data upstream to App.js\r\n\r\n};\r\n    render() {\r\n        return (\r\n            <div className='fish-edit'>\r\n            {/**Here, our inputs have values set to the STATE values, in App.js. If a change is made\r\n            the onChange method kicks in, but react prevents any changes to STATE. See above */}\r\n            <input type=\"text\" name=\"name\" onChange={this.handleChange} value={this.props.fish.name} />\r\n            <input type=\"text\" name=\"price\" onChange={this.handleChange} value={this.props.fish.price} />\r\n            <select type=\"text\" name=\"status\" onChange={this.handleChange} value={this.props.fish.status}>\r\n                <option value=\"available\">Fresh!</option>\r\n                <option value=\"unavailable\">Sold Out!</option>\r\n            </select>\r\n            <textarea type=\"text\" name=\"desc\" onChange={this.handleChange} value={this.props.fish.desc} />\r\n            <input type=\"text\" name=\"image\" onChange={this.handleChange} value={this.props.fish.image} />\r\n\r\n            <button onClick={()=>this.props.deleteFish(this.props.index)}>Remove Fish</button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default EditFishForm;\r\n/**NOTE--- DOING this: <input type=\"text\" name=\"name\" value={this.props.fish.name} /> \r\n * \r\n * means that STATE now exists in TWO places - App.js, and above. This is because we passed state down to \r\n * EditFishForm and React throws an error when trying to update state in two places like that. State \r\n * should only be accessed/changed in the App component. To overcome this, we code an 'onChange' event. \r\n*/"]},"metadata":{},"sourceType":"module"}